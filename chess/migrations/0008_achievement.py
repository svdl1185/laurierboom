# Generated by Django 5.1.7 on 2025-03-16 23:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chess', '0007_populate_rating_history'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('tournament_win_1', 'Tournament Champion'), ('tournament_win_3', 'Triple Crown'), ('tournament_win_5', 'Dominator'), ('tournament_win_10', 'Dynasty Builder'), ('silver_medal_3', 'Silver Collector'), ('silver_medal_5', 'Silver Hoarder'), ('bronze_medal_3', 'Bronze Collector'), ('bronze_medal_5', 'Bronze Hoarder'), ('hat_trick', 'Hat Trick'), ('winning_streak_5', 'Winning Streak'), ('winning_streak_10', 'Unstoppable'), ('white_dominator', 'White Dominator'), ('black_defender', 'Black Defender'), ('clean_sweep', 'Clean Sweep'), ('perfect_score', 'Perfect Score'), ('undefeated', 'Undefeated'), ('tournament_veteran_10', 'Tournament Veteran'), ('tournament_veteran_25', 'Tournament Master'), ('tournament_veteran_50', 'Tournament Legend'), ('comeback_kid', 'Comeback Kid'), ('underdog', 'Underdog'), ('giant_slayer', 'Giant Slayer'), ('swiss_master', 'Swiss Master'), ('round_robin_champion', 'Round Robin Champion'), ('double_round_robin_king', 'Double Round Robin King'), ('bullet_blitzer', 'Bullet Blitzer'), ('blitz_boss', 'Blitz Boss'), ('rapid_ruler', 'Rapid Ruler'), ('classical_conqueror', 'Classical Conqueror'), ('rating_1600', 'Candidate Master'), ('rating_1800', 'FIDE Master'), ('rating_2000', 'International Master'), ('rating_2200', 'Grandmaster'), ('support_bear', 'Emotional Support Bear'), ('dummies', 'Chess for Dummies'), ('goat', 'The Ace'), ('truce_seeker', 'Truce Seeker')], max_length=50)),
                ('date_achieved', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default=1)),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chess.tournament')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_achieved'],
                'unique_together': {('user', 'achievement_type')},
            },
        ),
    ]
